<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <a href="/dashboard" class="btn btn-outline-primary user-guide-back-btn">
                    <i class="fas fa-arrow-left me-1"></i>
                    Back to Dashboard
                </a>
            </div>
            
            <div class="card">
                <div class="card-body">
                    <div class="user-guide-content">
                        <% 
                            // Improved Markdown to HTML conversion with better formatting
                            let htmlContent = guideContent
                                // Normalize line endings and remove excessive whitespace
                                .replace(/\r\n/g, '\n')
                                .replace(/\r/g, '\n')
                                // Remove multiple consecutive empty lines
                                .replace(/\n\s*\n\s*\n/g, '\n\n')
                                // Headers (must be done before paragraph processing)
                                .replace(/^### (.*$)/gim, '<h3>$1</h3>')
                                .replace(/^## (.*$)/gim, '<h2>$1</h2>')
                                .replace(/^# (.*$)/gim, '<h1>$1</h1>')
                                // Bold text
                                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                                // Code blocks (inline)
                                .replace(/`([^`]+)`/g, '<code>$1</code>')
                                // Links
                                .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2">$1</a>')
                                // Process lists first
                                .replace(/^(\s*)[-*+] (.+)$/gim, '$1<li>$2</li>')
                                .replace(/^(\s*)\d+\. (.+)$/gim, '$1<li>$2</li>')
                                // Wrap consecutive list items in ul tags
                                .replace(/(<li>.*<\/li>)(\s*<li>.*<\/li>)*/gms, function(match) {
                                    return '<ul>' + match + '</ul>';
                                })
                                // Split content into blocks separated by double newlines
                                .split(/\n\s*\n/)
                                .map(block => {
                                    block = block.trim();
                                    if (!block) return '';
                                    
                                    // Skip if already has HTML tags (headers, lists, etc.)
                                    if (/<\/?[h1-6|ul|li].*?>/.test(block)) {
                                        return block;
                                    }
                                    
                                    // Convert single newlines within paragraphs to <br>
                                    block = block.replace(/\n/g, '<br>');
                                    
                                    // Wrap in paragraph tags if not empty and doesn't start with HTML
                                    if (block && !block.startsWith('<')) {
                                        return '<p>' + block + '</p>';
                                    }
                                    
                                    return block;
                                })
                                .filter(block => block.trim()) // Remove empty blocks
                                .join('\n\n')
                                // Clean up any remaining issues
                                .replace(/<p><\/p>/g, '') // Remove empty paragraphs
                                .replace(/<p>(<[h1-6])/g, '$1') // Don't wrap headers in paragraphs
                                .replace(/(<\/[h1-6]>)<\/p>/g, '$1')
                                .replace(/<p>(<ul>)/g, '$1') // Don't wrap lists in paragraphs
                                .replace(/(<\/ul>)<\/p>/g, '$1')
                                // Ensure proper spacing around block elements
                                .replace(/(<\/[h1-6]>)\s*(<[h1-6])/g, '$1\n\n$2')
                                .replace(/(<\/ul>)\s*(<[h1-6])/g, '$1\n\n$2')
                                .replace(/(<\/[h1-6]>)\s*(<ul>)/g, '$1\n\n$2');
                        %>
                        <%- htmlContent %>
                    </div>
                </div>
            </div>
            
            <div class="text-center mt-4">
                <p class="text-muted">
                    <i class="fas fa-info-circle me-1"></i>
                    Need help? Contact support at 
                    <a href="mailto:support@oldmanfooty.com">support@oldmanfooty.com</a>
                </p>
            </div>
        </div>
    </div>
</div>