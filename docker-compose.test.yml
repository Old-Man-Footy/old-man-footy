# docker-compose.test.yml
version: '3.8'

services:
  app:
    image: ghcr.io/old-man-footy/old-man-footy:latest
    container_name: old-man-footy-test
    ports:
      - "3055:3055"
      - "9230:9230" # Debug port for Node.js inspector (different from dev)
    environment:
      - NODE_ENV=test
      - SESSION_SECRET=${SESSION_SECRET}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_FROM=noreply@oldmanfooty.au
      - SUPPORT_EMAIL=${SUPPORT_EMAIL:-support@oldmanfooty.au}
      - EMAIL_FROM_NAME="Old Man Footy Test"
      - PORT=3055
    volumes:
      # Mount source code for testing
      - .:/app
      - /app/node_modules # Prevent overwriting node_modules
      # Persist test database and uploads to host directories
      - /volume2/docker/old-man-footy-test/data:/app/data
      - /volume2/docker/old-man-footy-test/uploads:/app/public/uploads
    networks:
      - old-man-footy-network-test

    restart: unless-stopped
    stdin_open: true
    tty: true

    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3055/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s    
    logging:
      # Logging: JSON file driver with rotation for test environment
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    security_opt:
      - no-new-privileges:true
          
    tmpfs:
      - /tmp
      - /var/cache
      - /var/log
      
networks:
  old-man-footy-network-test:
    driver: bridge